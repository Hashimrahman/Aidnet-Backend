version: '3.8'

services:
  user-service:
    build: ./user_service
    container_name: user_service
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./staticfiles:/app/staticfiles
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      DJANGO_SETTINGS_MODULE: user_service.settings
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 10 && python manage.py migrate && (python manage.py runserver 0.0.0.0:8000 & python users/consumer.py)"

  relief-campaign-service:
    build: ./relief_campaign_service
    container_name: relief_campaign_service
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      user-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./relief_campaign_service:/app
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      DJANGO_SETTINGS_MODULE: relief_campaign_service.settings
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  donation-service:
    build: ./donation_service
    container_name: donation_service
    ports:
      - "8002:8000"
    depends_on:
      db:
        condition: service_healthy
      user-service:
        condition: service_started
    volumes:
      - ./staticfiles:/app/staticfiles
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  chat-service:
    build: ./chat_service
    container_name: chat_service
    ports:
      - "8003:8000"
    depends_on:
      db:
        condition: service_healthy
      user-service:
        condition: service_started
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./chat_service:/app
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      REDIS_HOST: redis
      DJANGO_SETTINGS_MODULE: chat_service.settings
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 10 && python manage.py makemigrations chat && python manage.py migrate && daphne -b 0.0.0.0 -p 8000 chat_service.asgi:application"

  chat-consumer:
    build: ./chat_service
    container_name: chat_consumer
    depends_on:
      chat-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      DJANGO_SETTINGS_MODULE: chat_service.settings
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 15 && python chat/consumer.py"
  
  ai-service:
    build: ./ai_service
    container_name: ai_service
    command: daphne -b 0.0.0.0 -p 8000 ai_service.asgi:application
    ports:
      - "8004:8000"
    depends_on:
      - redis
    environment:
      - GEMINI_API_KEY=AIzaSyCy2oq7Gn-ZRvyvwoA90EswHf7wz0O3ngk
    networks:
      - aidnet_network
  
  request-service:
    build: ./request_service
    container_name: request_service
    ports:
      - "8005:8000"
    depends_on:
      db:
        condition: service_healthy
      user-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    
    volumes:
      - ./request_service:/app
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      DJANGO_SETTINGS_MODULE: request_service.settings
    networks:
      - aidnet_network
    command: >
      sh -c "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"



  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - aidnet_network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - aidnet_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5

  celery_worker_relief:
    build: ./relief_campaign_service
    container_name: relief_campaign_celery
    command: celery -A relief_campaign_service worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
      relief-campaign-service:
        condition: service_started
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
    networks:
      - aidnet_network

  db:
    image: postgres:15
    container_name: user_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1102
      POSTGRES_DB: aidnet
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aidnet_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  postgres_data:


networks:
  aidnet_network:
    driver: bridge
